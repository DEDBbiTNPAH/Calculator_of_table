function calc(person_data,meal,extra_activities){ //главная функция расчёта времени, пока что на вход идут 2у мерные массивы (даже скорее 2*n)
	//получение массива лекций по person_data: 2ух мерный массив лекций, где лекция массив (название, начало ,конец, место)
	// дополнительные лекции собрания не могут противоречть обязательным
	// пока что пусть в начале ставим лекции потом всё остальное
	table=person_data // пока в нашей модели всё из person data перейдёт в table
	// нужно учитывать переходы между лекциями, но пока рано
	var time_holes=[]
	var max_hole=0
	var extra_info=[]
	for(var i=0;i+1<person_data.length;i++){
		times_holes.push(person_data[i][3], person_data[i+1][2], person_data[i+1][2]-person_data[i][3]) //вдруг понадобятся все врменные отрезки дырок, [начало дырки, конец дырки, её продолжительность]
		if(person_data[i+1][2]-person_data[i][3]>max_hole){
			max_hole=person_data[i+1][2]-person_data[i][3]
		}
	}
	//теперь добавление приёма пищи: meal массив [желаемое время,продолжительнолсть] пока забиваем на расстояние до места, потом добавим
	if (meal[1]>max_hole){
		extra_info.push("нет времени на приём еды")
	} else {
		var i=0
		while (times_holes[i+1][0]<=meal[0])i++ //ищем желаемое время
		//где-то тут начинаем перебор, запиываем в table время принятия еды, удаляем дырку
		//то же самое c extra_activities, прогнать через дырки в расписание, но тут ещё тогда добавить их на время до пар или после или написать что сегодня нельзя (или недобно)
		
		
	
	
	return table// пока вижу table как упорядоченный 2ух мерный массив на подобии person_data 
}






































//пока что не знаю зачем нам классы здесь 
// function Lection(time,place){ //класс Лекции, локатион зарезервированно джавой
	// this.time=time
	// this.place=place
	// this.priority=0 //пока не используется но пусть будет
// }
