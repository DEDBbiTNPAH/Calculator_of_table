function calc(person_data,meal,extra_activities){ //главная функция расчёта времени, надо определиться с входными данными(их тип, массив?, экземлпяр класс?)
	//получение массива лекций по person_data: 2ух мерный массив лекций, где лекция массив (название, начало ,конец, место)
	// дополнительные лекции собрания не могут противоречть обязательным
	// пока что пусть в начале ставим лекции потом всё остальное
	table=person_data // пока в нашей модели всё из person data перейдёт в table
	// нужно учитывать переходы между лекциями, но пока рано
	var time_holes=[]
	var max_hole=0
	var extra_info=[]
	for(var i=0;i+1<person_data.length;i++){
		times_holes.push(person_data[i][3], person_data[i+1][2], person_data[i+1][2]-person_data[i][3]) //вдруг понадобятся все врменные отрезки дырок, [начало дырки, конец дырки, её продолжительность]
		if(person_data[i+1][2]-person_data[i][3]>max_hole){ // время получить в Date классе втроенном в js
			max_hole=person_data[i+1][2]-person_data[i][3]
		}
	}
	//теперь добавление приёма пищи: meal массив [название ,желаемое начало,желаемый конец,место] пока забиваем на расстояние до места, потом добавим
	if (meal[2]-meal[1]>max_hole){
		extra_info.push("нет времени на приём еды")
	} else {
		var i=0
		while (times_holes[i+1][0]<=meal[1])i++
		if (time_holes[i][2]<=meal[2]-meal[1]) {filling_table(meal)} // если угадали со временем, сразу вставить
		else{
			var p=1
			while (Math.abs(p)<times_holes.length-1){//cам перебор по принципу +1 -2 +3 -4 по массиву, мы всегда будем начинать снизу так что жто вероятно будет работать
				i=i+p
				if (time_holes[i][2]<=meal[2]-meal[1]){ filling_table(meal)}
				if (p>0){p=p+1}
				else {p=p-1}
			}
		}
			
			
			
			
			
			//ищем желаемое время
		//где-то тут начинаем перебор, запиываем в table время принятия еды, удаляем дырку
		//то же самое c extra_activities, прогнать через дырки в расписание, но тут ещё тогда добавить их на время до пар или после или написать что сегодня нельзя (или недобно)
		
		
	
	
	return table// пока вижу table как упорядоченный 2ух мерный массив на подобии person_data 
}
function filling_table(action,time){ //указывается начальное время действия Эта функция только добавляет  в расписание , ВСЕ ПРОВЕРКИ УЖЕ ДОЛЖНЫ БЫТЬ СДЕЛАНЫ ПЕРЕД ВЫЗОВОМ
	var i=0// функция добаления действия (не к этой строке)
	while(table[i][1]<=time)i++
	table.splice(i+1,0,action)//собственно добавление элемента
}





































//пока что не знаю зачем нам классы здесь 
// function Lection(time,place){ //класс Лекции, локатион зарезервированно джавой
	// this.time=time
	// this.place=place
	// this.priority=0 //пока не используется но пусть будет
// }
